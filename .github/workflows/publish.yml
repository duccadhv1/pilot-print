name: Release
on:
  push:
    tag: '1*'

jobs:
  publish_on_mac:
    runs-on: macos-latest
    steps:
      - name: Prepare GITHUB_ENV
        run: |
          echo "GIT_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - uses: actions/checkout@v4
      - uses: actions/setup-node@master
        with:
          node-version: 16

      - name: install dependencies
        run: npm install

      - name: Update Version
        run: |
          sed -i -e 's/1.0.0/${{ env.GIT_TAG }}/g' release/app/package.json
          cat release/app/package.json

      - name: package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run package

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Windown
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/build/OtterSGPrintProxy Setup ${{ env.GIT_TAG }}.exe # Adjust the path
          asset_name: OtterSGPrintProxy Setup ${{ env.GIT_TAG }}.exe.zip
          asset_content_type: application/zip # Adjust content type if needed
      - name: Upload Release Mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/build/OtterSGPrintProxy-${{ env.GIT_TAG }}-mac.zip # Adjust the path
          asset_name: OtterSGPrintProxy-${{ env.GIT_TAG }}-mac.zip
          asset_content_type: application/zip # Adjust content type if needed
      - name: Upload Release Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/build/OtterSGPrintProxy-${{ env.GIT_TAG }}.AppImage # Adjust the path
          asset_name: OtterSGPrintProxy-${{ env.GIT_TAG }}.AppImage
          asset_content_type: application/zip # Adjust content type if needed
